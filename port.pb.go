// Code generated by protoc-gen-go. DO NOT EDIT.
// source: port.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PortBatchReq struct {
	Ports                []*Port  `protobuf:"bytes,1,rep,name=ports,proto3" json:"ports,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortBatchReq) Reset()         { *m = PortBatchReq{} }
func (m *PortBatchReq) String() string { return proto.CompactTextString(m) }
func (*PortBatchReq) ProtoMessage()    {}
func (*PortBatchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_729c3d36e9010a8e, []int{0}
}

func (m *PortBatchReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortBatchReq.Unmarshal(m, b)
}
func (m *PortBatchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortBatchReq.Marshal(b, m, deterministic)
}
func (m *PortBatchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortBatchReq.Merge(m, src)
}
func (m *PortBatchReq) XXX_Size() int {
	return xxx_messageInfo_PortBatchReq.Size(m)
}
func (m *PortBatchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PortBatchReq.DiscardUnknown(m)
}

var xxx_messageInfo_PortBatchReq proto.InternalMessageInfo

func (m *PortBatchReq) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

type PortBatchRsp struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortBatchRsp) Reset()         { *m = PortBatchRsp{} }
func (m *PortBatchRsp) String() string { return proto.CompactTextString(m) }
func (*PortBatchRsp) ProtoMessage()    {}
func (*PortBatchRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_729c3d36e9010a8e, []int{1}
}

func (m *PortBatchRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortBatchRsp.Unmarshal(m, b)
}
func (m *PortBatchRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortBatchRsp.Marshal(b, m, deterministic)
}
func (m *PortBatchRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortBatchRsp.Merge(m, src)
}
func (m *PortBatchRsp) XXX_Size() int {
	return xxx_messageInfo_PortBatchRsp.Size(m)
}
func (m *PortBatchRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_PortBatchRsp.DiscardUnknown(m)
}

var xxx_messageInfo_PortBatchRsp proto.InternalMessageInfo

func (m *PortBatchRsp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type GetPortsReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPortsReq) Reset()         { *m = GetPortsReq{} }
func (m *GetPortsReq) String() string { return proto.CompactTextString(m) }
func (*GetPortsReq) ProtoMessage()    {}
func (*GetPortsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_729c3d36e9010a8e, []int{2}
}

func (m *GetPortsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPortsReq.Unmarshal(m, b)
}
func (m *GetPortsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPortsReq.Marshal(b, m, deterministic)
}
func (m *GetPortsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPortsReq.Merge(m, src)
}
func (m *GetPortsReq) XXX_Size() int {
	return xxx_messageInfo_GetPortsReq.Size(m)
}
func (m *GetPortsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPortsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPortsReq proto.InternalMessageInfo

type GetPortsRsp struct {
	Ports                []*Port  `protobuf:"bytes,1,rep,name=ports,proto3" json:"ports,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPortsRsp) Reset()         { *m = GetPortsRsp{} }
func (m *GetPortsRsp) String() string { return proto.CompactTextString(m) }
func (*GetPortsRsp) ProtoMessage()    {}
func (*GetPortsRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_729c3d36e9010a8e, []int{3}
}

func (m *GetPortsRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPortsRsp.Unmarshal(m, b)
}
func (m *GetPortsRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPortsRsp.Marshal(b, m, deterministic)
}
func (m *GetPortsRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPortsRsp.Merge(m, src)
}
func (m *GetPortsRsp) XXX_Size() int {
	return xxx_messageInfo_GetPortsRsp.Size(m)
}
func (m *GetPortsRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPortsRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetPortsRsp proto.InternalMessageInfo

func (m *GetPortsRsp) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

type Port struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	City                 string    `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Country              string    `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	Alias                []string  `protobuf:"bytes,5,rep,name=alias,proto3" json:"alias,omitempty"`
	Regions              []string  `protobuf:"bytes,6,rep,name=regions,proto3" json:"regions,omitempty"`
	Coordinates          []float64 `protobuf:"fixed64,7,rep,packed,name=coordinates,proto3" json:"coordinates,omitempty"`
	Province             string    `protobuf:"bytes,8,opt,name=province,proto3" json:"province,omitempty"`
	Timezone             string    `protobuf:"bytes,9,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Unlocs               []string  `protobuf:"bytes,10,rep,name=unlocs,proto3" json:"unlocs,omitempty"`
	Code                 string    `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_729c3d36e9010a8e, []int{4}
}

func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (m *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(m, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Port) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Port) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Port) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Port) GetAlias() []string {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *Port) GetRegions() []string {
	if m != nil {
		return m.Regions
	}
	return nil
}

func (m *Port) GetCoordinates() []float64 {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

func (m *Port) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *Port) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *Port) GetUnlocs() []string {
	if m != nil {
		return m.Unlocs
	}
	return nil
}

func (m *Port) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func init() {
	proto.RegisterType((*PortBatchReq)(nil), "proto.PortBatchReq")
	proto.RegisterType((*PortBatchRsp)(nil), "proto.PortBatchRsp")
	proto.RegisterType((*GetPortsReq)(nil), "proto.GetPortsReq")
	proto.RegisterType((*GetPortsRsp)(nil), "proto.GetPortsRsp")
	proto.RegisterType((*Port)(nil), "proto.Port")
}

func init() {
	proto.RegisterFile("port.proto", fileDescriptor_729c3d36e9010a8e)
}

var fileDescriptor_729c3d36e9010a8e = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x49, 0xd2, 0xb4, 0xe9, 0x05, 0x10, 0x3a, 0x10, 0xb2, 0x3a, 0x85, 0x4c, 0x99, 0xaa,
	0x52, 0x24, 0x66, 0xc4, 0xc2, 0x5a, 0x85, 0x27, 0x08, 0xce, 0x09, 0x2c, 0xb5, 0xb9, 0xd4, 0x76,
	0x2b, 0x95, 0x17, 0x60, 0xe3, 0x99, 0x91, 0x9d, 0xa6, 0x8a, 0xd4, 0x85, 0x29, 0xfe, 0xbf, 0xfb,
	0x2f, 0x67, 0xdf, 0x0f, 0xd0, 0xb2, 0xb6, 0xf3, 0x56, 0xb3, 0x65, 0x8c, 0xfd, 0x27, 0x7f, 0x84,
	0xcb, 0x15, 0x6b, 0xfb, 0x5a, 0x59, 0xf9, 0x55, 0xd2, 0x16, 0x1f, 0x20, 0x76, 0x26, 0x23, 0x82,
	0x2c, 0x2a, 0xd2, 0x65, 0xda, 0xb9, 0xe7, 0xce, 0x53, 0x76, 0x95, 0xbc, 0x18, 0xb6, 0x98, 0x16,
	0x05, 0x4c, 0xcc, 0x4e, 0x4a, 0x32, 0xae, 0x29, 0x28, 0x92, 0xb2, 0x97, 0xf9, 0x15, 0xa4, 0x6f,
	0x64, 0x9d, 0xd9, 0x94, 0xb4, 0xcd, 0x17, 0x03, 0x69, 0xda, 0xff, 0x8c, 0xfa, 0x0d, 0x61, 0xe4,
	0x34, 0x5e, 0x43, 0xa8, 0x6a, 0xff, 0xfb, 0x69, 0x19, 0xaa, 0x1a, 0x11, 0x46, 0x4d, 0xb5, 0x21,
	0x11, 0x7a, 0xe2, 0xcf, 0x8e, 0x49, 0x65, 0x0f, 0x22, 0xea, 0x98, 0x3b, 0xbb, 0xbb, 0x49, 0xde,
	0x35, 0x56, 0x1f, 0xc4, 0xc8, 0xe3, 0x5e, 0xe2, 0x1d, 0xc4, 0xd5, 0x5a, 0x55, 0x46, 0xc4, 0x59,
	0x54, 0x4c, 0xcb, 0x4e, 0x38, 0xbf, 0xa6, 0x4f, 0xc5, 0x8d, 0x11, 0x63, 0xcf, 0x7b, 0x89, 0x19,
	0xa4, 0x92, 0x59, 0xd7, 0xaa, 0xa9, 0x2c, 0x19, 0x31, 0xc9, 0xa2, 0x22, 0x28, 0x87, 0x08, 0x67,
	0x90, 0xb4, 0x9a, 0xf7, 0xaa, 0x91, 0x24, 0x12, 0x3f, 0xec, 0xa4, 0x5d, 0xcd, 0xaa, 0x0d, 0x7d,
	0x73, 0x43, 0x62, 0xda, 0xd5, 0x7a, 0x8d, 0xf7, 0x30, 0xde, 0x35, 0x6b, 0x96, 0x46, 0x80, 0x1f,
	0x79, 0x54, 0xfe, 0x3d, 0x5c, 0x93, 0x48, 0x8f, 0xef, 0xe1, 0x9a, 0x96, 0x3f, 0x01, 0xa4, 0x6e,
	0x21, 0xef, 0xa4, 0xf7, 0x4a, 0x12, 0xbe, 0xc0, 0xcd, 0x4a, 0xb3, 0x5b, 0xf6, 0x29, 0x12, 0xbc,
	0x1d, 0x2c, 0xb2, 0xcf, 0x75, 0x76, 0x0e, 0x4d, 0x9b, 0x5f, 0x14, 0x01, 0x3e, 0x43, 0xd2, 0x87,
	0x82, 0x78, 0x34, 0x0d, 0x42, 0x9b, 0x9d, 0x31, 0xd7, 0xb7, 0x08, 0x3e, 0xc6, 0x1e, 0x3f, 0xfd,
	0x05, 0x00, 0x00, 0xff, 0xff, 0x01, 0xa5, 0xdc, 0x76, 0x54, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PortServiceClient is the client API for PortService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PortServiceClient interface {
	ProcessPortBatch(ctx context.Context, opts ...grpc.CallOption) (PortService_ProcessPortBatchClient, error)
	GetPorts(ctx context.Context, in *GetPortsReq, opts ...grpc.CallOption) (PortService_GetPortsClient, error)
}

type portServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPortServiceClient(cc grpc.ClientConnInterface) PortServiceClient {
	return &portServiceClient{cc}
}

func (c *portServiceClient) ProcessPortBatch(ctx context.Context, opts ...grpc.CallOption) (PortService_ProcessPortBatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PortService_serviceDesc.Streams[0], "/proto.PortService/ProcessPortBatch", opts...)
	if err != nil {
		return nil, err
	}
	x := &portServiceProcessPortBatchClient{stream}
	return x, nil
}

type PortService_ProcessPortBatchClient interface {
	Send(*PortBatchReq) error
	CloseAndRecv() (*PortBatchRsp, error)
	grpc.ClientStream
}

type portServiceProcessPortBatchClient struct {
	grpc.ClientStream
}

func (x *portServiceProcessPortBatchClient) Send(m *PortBatchReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *portServiceProcessPortBatchClient) CloseAndRecv() (*PortBatchRsp, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PortBatchRsp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *portServiceClient) GetPorts(ctx context.Context, in *GetPortsReq, opts ...grpc.CallOption) (PortService_GetPortsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PortService_serviceDesc.Streams[1], "/proto.PortService/GetPorts", opts...)
	if err != nil {
		return nil, err
	}
	x := &portServiceGetPortsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PortService_GetPortsClient interface {
	Recv() (*GetPortsRsp, error)
	grpc.ClientStream
}

type portServiceGetPortsClient struct {
	grpc.ClientStream
}

func (x *portServiceGetPortsClient) Recv() (*GetPortsRsp, error) {
	m := new(GetPortsRsp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PortServiceServer is the server API for PortService service.
type PortServiceServer interface {
	ProcessPortBatch(PortService_ProcessPortBatchServer) error
	GetPorts(*GetPortsReq, PortService_GetPortsServer) error
}

// UnimplementedPortServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPortServiceServer struct {
}

func (*UnimplementedPortServiceServer) ProcessPortBatch(srv PortService_ProcessPortBatchServer) error {
	return status.Errorf(codes.Unimplemented, "method ProcessPortBatch not implemented")
}
func (*UnimplementedPortServiceServer) GetPorts(req *GetPortsReq, srv PortService_GetPortsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetPorts not implemented")
}

func RegisterPortServiceServer(s *grpc.Server, srv PortServiceServer) {
	s.RegisterService(&_PortService_serviceDesc, srv)
}

func _PortService_ProcessPortBatch_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PortServiceServer).ProcessPortBatch(&portServiceProcessPortBatchServer{stream})
}

type PortService_ProcessPortBatchServer interface {
	SendAndClose(*PortBatchRsp) error
	Recv() (*PortBatchReq, error)
	grpc.ServerStream
}

type portServiceProcessPortBatchServer struct {
	grpc.ServerStream
}

func (x *portServiceProcessPortBatchServer) SendAndClose(m *PortBatchRsp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *portServiceProcessPortBatchServer) Recv() (*PortBatchReq, error) {
	m := new(PortBatchReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _PortService_GetPorts_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetPortsReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PortServiceServer).GetPorts(m, &portServiceGetPortsServer{stream})
}

type PortService_GetPortsServer interface {
	Send(*GetPortsRsp) error
	grpc.ServerStream
}

type portServiceGetPortsServer struct {
	grpc.ServerStream
}

func (x *portServiceGetPortsServer) Send(m *GetPortsRsp) error {
	return x.ServerStream.SendMsg(m)
}

var _PortService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.PortService",
	HandlerType: (*PortServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ProcessPortBatch",
			Handler:       _PortService_ProcessPortBatch_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GetPorts",
			Handler:       _PortService_GetPorts_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "port.proto",
}
